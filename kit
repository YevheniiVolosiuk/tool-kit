#!/usr/bin/env bash

# Determine if stdout is a terminal...
if test -t 1; then
    # Determine if colors are supported...
    ncolors=$(tput colors)

    if test -n "$ncolors" && test "$ncolors" -ge 8; then
        BOLD="$(tput bold)"
        YELLOW="$(tput setaf 3)"
        GREEN="$(tput setaf 2)"
        NC="$(tput sgr0)"
    fi
fi

# Function that prints the available commands...
function display_help {
    echo "Laravel Starter Kit"
    echo
    echo "${YELLOW}Usage:${NC}" >&2
    echo "  kit [prod] COMMAND [options] [arguments]"
    echo
    echo "examples:"
    echo "      ${GREEN}kit build${NC}      Build the application"
    echo "      ${GREEN}kit prod build${NC} Build the production version of the application"
    echo
    echo "${YELLOW}Commands:${NC}"
    echo "  ${GREEN}kit build${NC}          Build the application"
    echo "  ${GREEN}kit start${NC}          Start the application"
    echo "  ${GREEN}kit stop${NC}           Stop the application"
    echo "  ${GREEN}kit restart${NC}        Stop and start the application"
    echo "  ${GREEN}kit destroy${NC}        Stop the application and delete all images"
    echo "  ${GREEN}kit horizon up${NC}     Starts horizon"
    echo "  ${GREEN}kit horizon down${NC}   Stops horizon"
    echo "  ${GREEN}kit ps${NC}             Display the status of all containers"
    echo
    echo "${YELLOW}Artisan Commands:${NC}"
    echo "  ${GREEN}kit artisan ...${NC}    Run an Artisan command"
    echo "  ${GREEN}kit artisan queue:work${NC}"
    echo
    echo "${YELLOW}Composer Commands:${NC}"
    echo "  ${GREEN}kit composer ...${NC}   Run a Composer command"
    echo "  ${GREEN}kit composer require laravel/sanctum${NC}"
    echo
    echo "${YELLOW}Node Commands:${NC}"
    echo "  ${GREEN}kit node ...${NC}         Run a Node command"
    echo "  ${GREEN}kit node --version${NC}"
    echo
    echo "${YELLOW}NPM Commands:${NC}"
    echo "  ${GREEN}kit npm ...${NC}        Run a npm command"
    echo "  ${GREEN}kit npx${NC}            Run a npx command"
    echo "  ${GREEN}kit npm run prod${NC}"
    echo
    exit 1
}

# Proxy the "help" command...
if [ $# -gt 0 ]; then
    if [ "$1" == "help" ] || [ "$1" == "-h" ] || [ "$1" == "-help" ] || [ "$1" == "--help" ]; then
        display_help
    fi
else
    display_help
fi

if [ "$1" == "prod" ]; then
  shift 1
  COMPOSE_FILE="docker-compose-prod.yml"
  ENV_FILE=".env-prod"
else
  COMPOSE_FILE="docker-compose.yml"
  ENV_FILE=".env"
fi

# Build the application
if [ "$1" == "build" ]; then
    shift 1
    if [ -z "$1" ]; then
        docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} build nginx
        docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} run --rm composer install
        docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} run --rm npm install
        docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} run --rm npm run build
    else
        docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} build "$@"
    fi

# Start the application
elif [ "$1" == "start" ]; then
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} up -d nginx

# Stop the application
elif [ "$1" == "stop" ]; then
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} down

# Restart the application
elif [ "$1" == "restart" ]; then
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} down
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} up -d nginx

# Destroy the application
elif [ "$1" == "destroy" ]; then
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} down

# List running processes
elif [ "$1" == "ps" ]; then
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} ps

# SSH into container
elif [ "$1" == "ssh" ]; then
    shift 1
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE}  exec -it "$@" /bin/sh

# Start / stop horizon
elif [ "$1" == "horizon" ]; then
    if [ "$2" == "up" ]; then
        docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} up -d horizon
    elif [ "$2" == "down" ]; then
        docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} stop horizon
    fi

# Run composer commands
elif [ "$1" == "composer" ]; then
    shift 1
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} run --rm composer "$@"

# Run npm commands
elif [ "$1" == "npm" ]; then
    shift 1
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} run --rm npm "$@"

# Run artisan commands
elif [ "$1" == "artisan" ]; then
    shift 1
    docker compose -f ${COMPOSE_FILE} --env-file ${ENV_FILE} run --rm artisan "$@"

else
    echo "Unknown command!"
fi
